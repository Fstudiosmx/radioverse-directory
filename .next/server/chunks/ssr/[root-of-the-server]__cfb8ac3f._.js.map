{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/translate-flow.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview A flow for translating text using Google AI.\n *\n * - translateText - A function that handles the text translation process.\n * - TranslateInput - The input type for the translateText function.\n * - TranslateOutput - The return type for the translateText function.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'zod';\n\nconst TranslateInputSchema = z.object({\n  text: z.string().describe('The text to be translated.'),\n  targetLanguage: z\n    .string()\n    .describe(\n      'The target language for the translation (e.g., \"es\" for Spanish, \"pt\" for Portuguese).'\n    ),\n});\nexport type TranslateInput = z.infer<typeof TranslateInputSchema>;\n\nconst TranslateOutputSchema = z.object({\n  translation: z.string().describe('The translated text.'),\n});\nexport type TranslateOutput = z.infer<typeof TranslateOutputSchema>;\n\nexport async function translateText(\n  input: TranslateInput\n): Promise<TranslateOutput> {\n  return translateTextFlow(input);\n}\n\nconst translationPrompt = ai.definePrompt({\n  name: 'translationPrompt',\n  input: { schema: TranslateInputSchema },\n  output: { schema: TranslateOutputSchema },\n  prompt: `Translate the following text to {{targetLanguage}}.\nOnly return the translated text, without any additional explanations or context.\n\nText to translate:\n\"{{{text}}}\"\n`,\n  config: {\n    model: 'googleai/gemini-2.0-flash',\n    temperature: 0.3,\n  },\n});\n\nconst translateTextFlow = ai.defineFlow(\n  {\n    name: 'translateTextFlow',\n    inputSchema: TranslateInputSchema,\n    outputSchema: TranslateOutputSchema,\n  },\n  async (input) => {\n    const { output } = await translationPrompt(input);\n    if (!output) {\n      throw new Error('Translation failed: No output from the model.');\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAGA;;;;;;CAMC,GAED;AACA;;;;;;AAEA,MAAM,uBAAuB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,gBAAgB,oIAAA,CAAA,IAAC,CACd,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,wBAAwB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAGO,eAAe,cACpB,KAAqB;IAErB,OAAO,kBAAkB;AAC3B;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACxC,MAAM;IACN,OAAO;QAAE,QAAQ;IAAqB;IACtC,QAAQ;QAAE,QAAQ;IAAsB;IACxC,QAAQ,CAAC;;;;;AAKX,CAAC;IACC,QAAQ;QACN,OAAO;QACP,aAAa;IACf;AACF;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAO;IACL,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,kBAAkB;IAC3C,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/docs/verifications/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {translateText as '4008fe9dd1b75db7b9845b04e239c779500a7455c5'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/page-header.tsx"],"sourcesContent":["type PageHeaderProps = {\n  title: string;\n  description: string;\n};\n\nexport function PageHeader({ title, description }: PageHeaderProps) {\n  return (\n    <div className=\"space-y-2 px-4 sm:px-0\">\n      <h1 className=\"text-2xl md:text-3xl font-bold tracking-tight font-headline\">{title}</h1>\n      <p className=\"text-muted-foreground\">{description}</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAKO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAmB;IAChE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAG,WAAU;0BAA+D;;;;;;0BAC7E,8OAAC;gBAAE,WAAU;0BAAyB;;;;;;;;;;;;AAG5C","debugId":null}},
    {"offset": {"line": 393, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\ntype CardTitleProps = {\n  as?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'div';\n} & React.HTMLAttributes<HTMLHeadingElement | HTMLDivElement>;\n\n\nconst CardTitle = React.forwardRef<\n  HTMLHeadingElement | HTMLDivElement,\n  CardTitleProps\n>(({ className, as: Component = 'div', ...props }, ref) => (\n  <Component\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAOzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,IAAI,YAAY,KAAK,EAAE,GAAG,OAAO,EAAE,oBACjD,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 474, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/docs/verifications/page.tsx"],"sourcesContent":["import { PageHeader } from \"@/components/page-header\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { CheckCheck, Shield, Users, Award, Mic, Building, Star, Megaphone, Palette, Code, Video, LandPlot, Handshake, Heart, Gamepad2, BrainCircuit } from \"lucide-react\";\n\nconst verifications = [\n    { name: 'Staff', color: 'text-pink-500', icon: <Shield className=\"w-10 h-10 shrink-0 text-pink-500\" />, description: 'This badge is exclusively for official RadioVerse team members. It signifies administrative and moderation privileges.' },\n    { name: 'Top Broadcaster', color: 'text-red-500', icon: <Award className=\"w-10 h-10 shrink-0 text-red-500\" />, description: 'Awarded to top-tier broadcasters recognized for exceptional content quality, high listenership, and community engagement.' },\n    { name: 'Community Leader', color: 'text-yellow-500', icon: <Users className=\"w-10 h-10 shrink-0 text-yellow-500\" />, description: 'Recognizes users who have made significant positive contributions to the RadioVerse community through moderation, events, or support.' },\n    { name: 'Official Creator', color: 'text-blue-500', icon: <CheckCheck className=\"w-10 h-10 shrink-0 text-blue-500\" />, description: 'For verified content creators who own and manage official stations or podcasts on our platform, ensuring authenticity.' },\n    { name: 'Musical Artist', color: 'text-purple-500', icon: <Mic className=\"w-10 h-10 shrink-0 text-purple-500\" />, description: 'Verified musical artists, bands, or producers featured on the platform.' },\n    { name: 'Verified Brand', color: 'text-gray-500', icon: <Building className=\"w-10 h-10 shrink-0 text-gray-500\" />, description: 'Official account for a registered brand or company.' },\n    { name: 'Sponsor', color: 'text-green-500', icon: <Star className=\"w-10 h-10 shrink-0 text-green-500\" />, description: 'Official sponsors who support the RadioVerse community and events.' },\n    { name: 'Press', color: 'text-cyan-500', icon: <Megaphone className=\"w-10 h-10 shrink-0 text-cyan-500\" />, description: 'Verified members of the press and media outlets.' },\n    { name: 'Theme Developer', color: 'text-teal-500', icon: <Palette className=\"w-10 h-10 shrink-0 text-teal-500\" />, description: 'Creators who design and publish themes for Minisites.' },\n    { name: 'Widget Developer', color: 'text-indigo-500', icon: <Code className=\"w-10 h-10 shrink-0 text-indigo-500\" />, description: 'Developers who create custom widgets for the RadioVerse ecosystem.' },\n    { name: 'Video Producer', color: 'text-red-400', icon: <Video className=\"w-10 h-10 shrink-0 text-red-400\" />, description: 'Verified creators specializing in video content for VerseTV.' },\n    { name: 'Venue', color: 'text-orange-500', icon: <LandPlot className=\"w-10 h-10 shrink-0 text-orange-500\" />, description: 'Official accounts for venues like clubs, theaters, or concert halls.' },\n    { name: 'Strategic Partner', color: 'text-lime-500', icon: <Handshake className=\"w-10 h-10 shrink-0 text-lime-500\" />, description: 'Organizations that have a formal partnership with RadioVerse.' },\n    { name: 'Charity Partner', color: 'text-rose-500', icon: <Heart className=\"w-10 h-10 shrink-0 text-rose-500\" />, description: 'Verified non-profit or charitable organizations.' },\n    { name: 'Game Developer', color: 'text-amber-500', icon: <Gamepad2 className=\"w-10 h-10 shrink-0 text-amber-500\" />, description: 'Verified video game developers or publishing studios.' },\n    { name: 'AI Innovator', color: 'text-sky-500', icon: <BrainCircuit className=\"w-10 h-10 shrink-0 text-sky-500\" />, description: 'Pioneers using and developing AI tools within the RadioVerse platform.' },\n];\n\nexport default function VerificationsPage() {\n  return (\n    <div className=\"flex-1 space-y-4 pt-6\">\n      <PageHeader\n        title=\"Verification Guide\"\n        description=\"Understand the meaning of verification badges in RadioVerse.\"\n      />\n      <div className=\"max-w-4xl mx-auto pt-6 space-y-6\">\n         <Card>\n            <CardHeader>\n                <CardTitle>What Are Verifications?</CardTitle>\n                <CardDescription>\n                    Verification badges are a way to confirm authenticity and recognize significant contributions within the RadioVerse community. They are granted manually by our team and cannot be obtained through subscriptions or donations. The 'Founder' badge is exclusive and not listed here.\n                </CardDescription>\n            </CardHeader>\n        </Card>\n        \n        {verifications.map(verification => (\n             <Card key={verification.name}>\n                <CardHeader className=\"flex flex-row items-center gap-4 space-y-0\">\n                    {verification.icon}\n                    <div>\n                        <CardTitle className=\"font-headline text-2xl\">{verification.name}</CardTitle>\n                        <CardDescription>{verification.description}</CardDescription>\n                    </div>\n                </CardHeader>\n            </Card>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}