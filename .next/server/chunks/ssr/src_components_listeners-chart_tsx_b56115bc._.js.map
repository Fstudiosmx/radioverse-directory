{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/listeners-chart.tsx"],"sourcesContent":["\"use client\"\n\nimport { Bar, BarChart, ResponsiveContainer, XAxis, YAxis } from \"recharts\"\n\nconst data = [\n  { name: \"Jan\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Feb\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Mar\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Apr\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"May\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Jun\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Jul\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Aug\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Sep\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Oct\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Nov\", total: Math.floor(Math.random() * 5000) + 1000 },\n  { name: \"Dec\", total: Math.floor(Math.random() * 5000) + 1000 },\n]\n\nexport function ListenersChart() {\n  return (\n    <ResponsiveContainer width=\"100%\" height={350}>\n      <BarChart data={data}>\n        <XAxis\n          dataKey=\"name\"\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n        />\n        <YAxis\n          stroke=\"#888888\"\n          fontSize={12}\n          tickLine={false}\n          axisLine={false}\n          tickFormatter={(value) => `${value}`}\n        />\n        <Bar\n          dataKey=\"total\"\n          fill=\"hsl(var(--primary))\"\n          radius={[4, 4, 0, 0]}\n        />\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAFA;;;AAIA,MAAM,OAAO;IACX;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;IAC9D;QAAE,MAAM;QAAO,OAAO,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,QAAQ;IAAK;CAC/D;AAEM,SAAS;IACd,qBACE,8OAAC,mKAAA,CAAA,sBAAmB;QAAC,OAAM;QAAO,QAAQ;kBACxC,cAAA,8OAAC,oJAAA,CAAA,WAAQ;YAAC,MAAM;;8BACd,8OAAC,qJAAA,CAAA,QAAK;oBACJ,SAAQ;oBACR,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;;;;;;8BAEZ,8OAAC,qJAAA,CAAA,QAAK;oBACJ,QAAO;oBACP,UAAU;oBACV,UAAU;oBACV,UAAU;oBACV,eAAe,CAAC,QAAU,GAAG,OAAO;;;;;;8BAEtC,8OAAC,mJAAA,CAAA,MAAG;oBACF,SAAQ;oBACR,MAAK;oBACL,QAAQ;wBAAC;wBAAG;wBAAG;wBAAG;qBAAE;;;;;;;;;;;;;;;;;AAK9B","debugId":null}}]
}